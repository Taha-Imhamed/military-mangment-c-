@{
    ViewData["Title"] = "Privacy Policy";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Military Management System</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.cdnfonts.com/css/warband-stencil" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-image: url('https://img.freepik.com/premium-photo/black-camouflage-military-background-abstract-textures_743855-8938.jpg');
            background-size: cover;
            background-position: center;
            color: white;
            margin: 0;
            padding: 0;
            text-align: center;
            overflow: hidden;
        }

        .header {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid #00FF00;
            margin-top: 40px;
        }

        .header h1 {
            color: #00FF00;
            font-size: 36px;
            font-family: 'Warband Stencil', sans-serif;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
        }

        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            border: 1px solid #00FF00;
            border-radius: 5px;
            background-color: rgba(0, 0, 0, 0.7);
        }

        form {
            margin-bottom: 20px;
        }

        form input {
            padding: 10px;
            margin: 5px;
            border: 1px solid #00FF00;
            border-radius: 5px;
            background-color: black;
            color: #00FF00;
        }

        form button {
            padding: 10px 15px;
            margin: 5px;
            border: none;
            border-radius: 5px;
            background-color: #00FF00;
            color: black;
            font-weight: bold;
            cursor: pointer;
        }

        form button:hover {
            background-color: #00AA00;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 10px;
            text-align: center;
            border: 1px solid #00FF00;
        }

        th {
            background-color: black;
            color: #00FF00;
        }

        td {
            background-color: black;
            color: #00FF00;
        }

        td button {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            background-color: #FF0000;
            color: white;
            cursor: pointer;
        }

        td button:hover {
            background-color: #AA0000;
        }

        .footer {
            text-align: center;
            padding: 10px;
            margin-top: 40px;
            border-top: 1px solid #00FF00;
        }

        .footer p {
            color: #00FF00;
        }
    </style>
<script>
    async function fetchSoldiers() {
    const response = await fetch('soldiers.json'); // Fetch data from the JSON file
    const soldiers = await response.json();
    displaySoldiers(soldiers); // Pass data to the display function
}

function displaySoldiers(soldiers) {
    const soldierList = document.querySelector('.soldier-list table');

    // Generate table rows dynamically
    const rows = soldiers
        .map(
            (soldier) => `
            <tr onclick="showSoldierInfo('${soldier.id}')">
                <td>${soldier.name}</td>
            </tr>`
        )
        .join('');

    soldierList.innerHTML = `
        <tr>
            <th>Name</th>
        </tr>
        ${rows}
    `;

    // Store soldiers data globally for later access
    window.soldierData = soldiers.reduce((acc, soldier) => {
        acc[soldier.id] = soldier;
        return acc;
    }, {});
}

function showSoldierInfo(soldierId) {
    const soldier = window.soldierData[soldierId];
    if (!soldier) return;

    const soldierInfo = `
        <p><strong>Name:</strong> ${soldier.name}</p>
        <p><strong>Phone:</strong> ${soldier.phone}</p>
        <p><strong>Address:</strong> ${soldier.address}</p>
        <p><strong>Blood Type:</strong> ${soldier.bloodType}</p>
        <p><strong>Rank:</strong> ${soldier.rank}</p>
        <p><strong>Badge Number:</strong> ${soldier.badge}</p>
        <p><strong>Father's Name:</strong> ${soldier.father}</p>
        <p><strong>Mother's Name:</strong> ${soldier.mother}</p>
        <p><strong>Emergency Contact:</strong> ${soldier.emergency}</p>
        <p><strong>Join Date:</strong> ${soldier.joinDate}</p>
        <p><strong>Task:</strong> ${soldier.task}</p>
    `;

    const content = document.getElementById('info-content');
    content.innerHTML = soldierInfo;

    // Set the soldier's pic101 image
    const pic101 = document.getElementById('pic101');
    pic101.src = soldier.pic101;
}

// Fetch and display soldiers on page load
window.onload = fetchSoldiers;

</script>


</head>
<body>
    <div class="header">
        <h1>Admin Dashboard - Military Management System</h1>
    </div>

    <div class="container">
        <!-- Add Soldier Form -->
        <form id="add-soldier-form">
            <input type="text" id="soldier-name" placeholder="Enter Soldier Name" required>
            <input type="text" id="soldier-rank" placeholder="Enter Soldier Rank" required>
            <button type="button" onclick="addSoldier()">Add Soldier</button>
        </form>

        <!-- Soldier Table -->
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Rank</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="soldier-table">
                <!-- Soldiers will be added here dynamically -->
            </tbody>
        </table>
    </div>

    <div class="footer">
        <p>&copy; 2025 Military Management System</p>
    </div>

    <script>
        let soldierId = 1;

        // Pre-filled soldier data
        const initialSoldiers = [
            { name: 'John Doe', rank: 'Sergeant' },
            { name: 'Jane Smith', rank: 'Lieutenant' },
            { name: 'Mike Johnson', rank: 'Corporal' }
        ];

        // Load initial soldiers into the table
        function loadInitialSoldiers() {
            const table = document.getElementById('soldier-table');
            initialSoldiers.forEach(soldier => {
                const row = table.insertRow();
                row.innerHTML = `
                    <td>${soldierId++}</td>
                    <td>${soldier.name}</td>
                    <td>${soldier.rank}</td>
                    <td>
                        <button onclick="deleteSoldier(this)">Delete</button>
                    </td>
                `;
            });
        }

        function addSoldier() {
            const nameInput = document.getElementById('soldier-name');
            const rankInput = document.getElementById('soldier-rank');
            const name = nameInput.value.trim();
            const rank = rankInput.value.trim();

            if (name && rank) {
                const table = document.getElementById('soldier-table');
                const row = table.insertRow();
                row.innerHTML = `
                    <td>${soldierId++}</td>
                    <td>${name}</td>
                    <td>${rank}</td>
                    <td>
                        <button onclick="deleteSoldier(this)">Delete</button>
                    </td>
                `;

                // Clear inputs after adding
                nameInput.value = '';
                rankInput.value = '';
            } else {
                alert('Please fill out both fields.');
            }
        }

        function deleteSoldier(button) {
            if (confirm('Are you sure you want to delete this soldier?')) {
                const row = button.parentElement.parentElement;
                row.remove();
            }
        }

        // Load initial soldiers when the page loads
        window.onload = loadInitialSoldiers;
    </script>
</body>
</html>
